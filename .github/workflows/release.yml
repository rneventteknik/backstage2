name: Release Pipeline

on:
    release:
        types: [created]

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GH_PAT }}
                  fetch-depth: 0 # Needed for tags to be available

            - name: Set up Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install Heroku CLI
              run: |
                  curl https://cli-assets.heroku.com/install.sh | sh

            - name: Extract version from tag
              id: version
              run: |
                  TAG=${GITHUB_REF##*/v}
                  echo "tag=$TAG" >> $GITHUB_OUTPUT
                  echo "Parsed tag: $TAG"

            - name: Update package.json version
              run: |
                  npm version --no-git-tag-version "${{ steps.version.outputs.tag }}"

            - name: Commit version bump
              run: |
                  git checkout main
                  git config user.name "GitHub Actions"
                  git config user.email "actions@github.com"
                  git commit -am "Update version to ${{ steps.version.outputs.tag }}"
                  git push

            - name: Sleep to ensure version is updated in Heroku
              run: sleep 5m

            - name: Authenticate with Heroku
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
                  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
              run: |
                  echo "machine api.heroku.com" > ~/.netrc
                  echo "  login $HEROKU_EMAIL" >> ~/.netrc
                  echo "  password $HEROKU_API_KEY" >> ~/.netrc
                  chmod 600 ~/.netrc

            - name: Promote to production
              run: |
                  heroku pipelines:promote --app backstage2-stage

            - name: Post release notes to Slack
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              run: |
                  RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.tag }}"
                  RELEASE_JSON=$(curl -s "$RELEASE_URL")
                  DATA="$(jq -c '. | {text: ("A new version has been released for Backstage2: *" + .name + "*\nThis version contains the following improvements :dancing_penguin::\n" + .body)}' <<< $RELEASE_JSON)"

                  curl -X POST -H 'Content-type: application/json' \
                      --data "$DATA" \
                      "$SLACK_WEBHOOK_URL"
